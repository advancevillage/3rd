// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: cacheProxy.proto

package cacheProxy

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CacheOpt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password           string       `protobuf:"bytes,1,opt,name=Password,proto3" json:"Password,omitempty"`
	MaxRetries         int32        `protobuf:"varint,2,opt,name=MaxRetries,proto3" json:"MaxRetries,omitempty"`
	MinRetryBackoff    int64        `protobuf:"varint,3,opt,name=MinRetryBackoff,proto3" json:"MinRetryBackoff,omitempty"`
	MaxRetryBackoff    int64        `protobuf:"varint,4,opt,name=MaxRetryBackoff,proto3" json:"MaxRetryBackoff,omitempty"`
	DialTimeout        int64        `protobuf:"varint,5,opt,name=DialTimeout,proto3" json:"DialTimeout,omitempty"`
	ReadTimeout        int64        `protobuf:"varint,6,opt,name=ReadTimeout,proto3" json:"ReadTimeout,omitempty"`
	WriteTimeout       int64        `protobuf:"varint,7,opt,name=WriteTimeout,proto3" json:"WriteTimeout,omitempty"`
	PoolSize           int32        `protobuf:"varint,8,opt,name=PoolSize,proto3" json:"PoolSize,omitempty"`
	MinIdleConns       int32        `protobuf:"varint,9,opt,name=MinIdleConns,proto3" json:"MinIdleConns,omitempty"`
	MaxConnAge         int64        `protobuf:"varint,10,opt,name=MaxConnAge,proto3" json:"MaxConnAge,omitempty"`
	PoolTimeout        int64        `protobuf:"varint,11,opt,name=PoolTimeout,proto3" json:"PoolTimeout,omitempty"`
	IdleTimeout        int64        `protobuf:"varint,12,opt,name=IdleTimeout,proto3" json:"IdleTimeout,omitempty"`
	IdleCheckFrequency int64        `protobuf:"varint,13,opt,name=IdleCheckFrequency,proto3" json:"IdleCheckFrequency,omitempty"`
	Cluster            *ClusterOpt  `protobuf:"bytes,14,opt,name=Cluster,proto3" json:"Cluster,omitempty"`
	Single             *SingleOpt   `protobuf:"bytes,15,opt,name=Single,proto3" json:"Single,omitempty"`
	FailOver           *FailOverOpt `protobuf:"bytes,16,opt,name=FailOver,proto3" json:"FailOver,omitempty"`
}

func (x *CacheOpt) Reset() {
	*x = CacheOpt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheProxy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheOpt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheOpt) ProtoMessage() {}

func (x *CacheOpt) ProtoReflect() protoreflect.Message {
	mi := &file_cacheProxy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheOpt.ProtoReflect.Descriptor instead.
func (*CacheOpt) Descriptor() ([]byte, []int) {
	return file_cacheProxy_proto_rawDescGZIP(), []int{0}
}

func (x *CacheOpt) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CacheOpt) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *CacheOpt) GetMinRetryBackoff() int64 {
	if x != nil {
		return x.MinRetryBackoff
	}
	return 0
}

func (x *CacheOpt) GetMaxRetryBackoff() int64 {
	if x != nil {
		return x.MaxRetryBackoff
	}
	return 0
}

func (x *CacheOpt) GetDialTimeout() int64 {
	if x != nil {
		return x.DialTimeout
	}
	return 0
}

func (x *CacheOpt) GetReadTimeout() int64 {
	if x != nil {
		return x.ReadTimeout
	}
	return 0
}

func (x *CacheOpt) GetWriteTimeout() int64 {
	if x != nil {
		return x.WriteTimeout
	}
	return 0
}

func (x *CacheOpt) GetPoolSize() int32 {
	if x != nil {
		return x.PoolSize
	}
	return 0
}

func (x *CacheOpt) GetMinIdleConns() int32 {
	if x != nil {
		return x.MinIdleConns
	}
	return 0
}

func (x *CacheOpt) GetMaxConnAge() int64 {
	if x != nil {
		return x.MaxConnAge
	}
	return 0
}

func (x *CacheOpt) GetPoolTimeout() int64 {
	if x != nil {
		return x.PoolTimeout
	}
	return 0
}

func (x *CacheOpt) GetIdleTimeout() int64 {
	if x != nil {
		return x.IdleTimeout
	}
	return 0
}

func (x *CacheOpt) GetIdleCheckFrequency() int64 {
	if x != nil {
		return x.IdleCheckFrequency
	}
	return 0
}

func (x *CacheOpt) GetCluster() *ClusterOpt {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *CacheOpt) GetSingle() *SingleOpt {
	if x != nil {
		return x.Single
	}
	return nil
}

func (x *CacheOpt) GetFailOver() *FailOverOpt {
	if x != nil {
		return x.FailOver
	}
	return nil
}

type ClusterOpt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr           []string `protobuf:"bytes,1,rep,name=addr,proto3" json:"addr,omitempty"`
	MaxRedirects   int32    `protobuf:"varint,2,opt,name=MaxRedirects,proto3" json:"MaxRedirects,omitempty"`
	RouteByLatency bool     `protobuf:"varint,3,opt,name=RouteByLatency,proto3" json:"RouteByLatency,omitempty"`
	RouteRandomly  bool     `protobuf:"varint,4,opt,name=RouteRandomly,proto3" json:"RouteRandomly,omitempty"`
}

func (x *ClusterOpt) Reset() {
	*x = ClusterOpt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheProxy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterOpt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterOpt) ProtoMessage() {}

func (x *ClusterOpt) ProtoReflect() protoreflect.Message {
	mi := &file_cacheProxy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterOpt.ProtoReflect.Descriptor instead.
func (*ClusterOpt) Descriptor() ([]byte, []int) {
	return file_cacheProxy_proto_rawDescGZIP(), []int{1}
}

func (x *ClusterOpt) GetAddr() []string {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *ClusterOpt) GetMaxRedirects() int32 {
	if x != nil {
		return x.MaxRedirects
	}
	return 0
}

func (x *ClusterOpt) GetRouteByLatency() bool {
	if x != nil {
		return x.RouteByLatency
	}
	return false
}

func (x *ClusterOpt) GetRouteRandomly() bool {
	if x != nil {
		return x.RouteRandomly
	}
	return false
}

type SingleOpt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *SingleOpt) Reset() {
	*x = SingleOpt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheProxy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleOpt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleOpt) ProtoMessage() {}

func (x *SingleOpt) ProtoReflect() protoreflect.Message {
	mi := &file_cacheProxy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleOpt.ProtoReflect.Descriptor instead.
func (*SingleOpt) Descriptor() ([]byte, []int) {
	return file_cacheProxy_proto_rawDescGZIP(), []int{2}
}

func (x *SingleOpt) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type FailOverOpt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sentinels        []string `protobuf:"bytes,1,rep,name=Sentinels,proto3" json:"Sentinels,omitempty"`
	MasterName       string   `protobuf:"bytes,2,opt,name=MasterName,proto3" json:"MasterName,omitempty"`
	SentinelUsername string   `protobuf:"bytes,3,opt,name=SentinelUsername,proto3" json:"SentinelUsername,omitempty"`
	SentinelPassword string   `protobuf:"bytes,4,opt,name=SentinelPassword,proto3" json:"SentinelPassword,omitempty"`
}

func (x *FailOverOpt) Reset() {
	*x = FailOverOpt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheProxy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FailOverOpt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailOverOpt) ProtoMessage() {}

func (x *FailOverOpt) ProtoReflect() protoreflect.Message {
	mi := &file_cacheProxy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailOverOpt.ProtoReflect.Descriptor instead.
func (*FailOverOpt) Descriptor() ([]byte, []int) {
	return file_cacheProxy_proto_rawDescGZIP(), []int{3}
}

func (x *FailOverOpt) GetSentinels() []string {
	if x != nil {
		return x.Sentinels
	}
	return nil
}

func (x *FailOverOpt) GetMasterName() string {
	if x != nil {
		return x.MasterName
	}
	return ""
}

func (x *FailOverOpt) GetSentinelUsername() string {
	if x != nil {
		return x.SentinelUsername
	}
	return ""
}

func (x *FailOverOpt) GetSentinelPassword() string {
	if x != nil {
		return x.SentinelPassword
	}
	return ""
}

var File_cacheProxy_proto protoreflect.FileDescriptor

var file_cacheProxy_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x61, 0x63, 0x68, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x22, 0xec,
	0x04, 0x0a, 0x08, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4f, 0x70, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x61, 0x78,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x69, 0x6e, 0x52, 0x65,
	0x74, 0x72, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x4d, 0x69, 0x6e, 0x52, 0x65, 0x74, 0x72, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x6f, 0x66,
	0x66, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x79, 0x42, 0x61, 0x63,
	0x6b, 0x6f, 0x66, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x4d, 0x61, 0x78, 0x52,
	0x65, 0x74, 0x72, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x44,
	0x69, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x44, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x4d, 0x69, 0x6e, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x4d, 0x69, 0x6e, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x41, 0x67,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x6e,
	0x41, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x49, 0x64, 0x6c, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x49, 0x64, 0x6c, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x12, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x30, 0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74,
	0x52, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x06, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x70, 0x74,
	0x52, 0x06, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x46, 0x61, 0x69, 0x6c,
	0x4f, 0x76, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x4f, 0x76, 0x65, 0x72,
	0x4f, 0x70, 0x74, 0x52, 0x08, 0x46, 0x61, 0x69, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x22, 0x92, 0x01,
	0x0a, 0x0a, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x42, 0x79, 0x4c,
	0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x42, 0x79, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x6c, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x6c, 0x79, 0x22, 0x1f, 0x0a, 0x09, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x22, 0xa3, 0x01, 0x0a, 0x0b, 0x46, 0x61, 0x69, 0x6c, 0x4f, 0x76, 0x65, 0x72,
	0x4f, 0x70, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x53, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x6c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x3b, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_cacheProxy_proto_rawDescOnce sync.Once
	file_cacheProxy_proto_rawDescData = file_cacheProxy_proto_rawDesc
)

func file_cacheProxy_proto_rawDescGZIP() []byte {
	file_cacheProxy_proto_rawDescOnce.Do(func() {
		file_cacheProxy_proto_rawDescData = protoimpl.X.CompressGZIP(file_cacheProxy_proto_rawDescData)
	})
	return file_cacheProxy_proto_rawDescData
}

var file_cacheProxy_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_cacheProxy_proto_goTypes = []interface{}{
	(*CacheOpt)(nil),    // 0: cacheProxy.CacheOpt
	(*ClusterOpt)(nil),  // 1: cacheProxy.ClusterOpt
	(*SingleOpt)(nil),   // 2: cacheProxy.SingleOpt
	(*FailOverOpt)(nil), // 3: cacheProxy.FailOverOpt
}
var file_cacheProxy_proto_depIdxs = []int32{
	1, // 0: cacheProxy.CacheOpt.Cluster:type_name -> cacheProxy.ClusterOpt
	2, // 1: cacheProxy.CacheOpt.Single:type_name -> cacheProxy.SingleOpt
	3, // 2: cacheProxy.CacheOpt.FailOver:type_name -> cacheProxy.FailOverOpt
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_cacheProxy_proto_init() }
func file_cacheProxy_proto_init() {
	if File_cacheProxy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cacheProxy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheOpt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheProxy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterOpt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheProxy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleOpt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheProxy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FailOverOpt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cacheProxy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cacheProxy_proto_goTypes,
		DependencyIndexes: file_cacheProxy_proto_depIdxs,
		MessageInfos:      file_cacheProxy_proto_msgTypes,
	}.Build()
	File_cacheProxy_proto = out.File
	file_cacheProxy_proto_rawDesc = nil
	file_cacheProxy_proto_goTypes = nil
	file_cacheProxy_proto_depIdxs = nil
}
